{"ast":null,"code":"var _jsxFileName = \"D:\\\\_Arquivos\\\\Documents\\\\mattheus\\\\TypingText\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport lista_palavras from './resources/words.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst max_typed = 30;\n\nconst getPalavra = () => {\n  const index = Math.floor(Math.random() * lista_palavras.length);\n  const palavra = lista_palavras[index];\n  return palavra.toLowerCase();\n};\n\nconst valido = (k, w) => {\n  if (!w) return false;\n  const re = w.split('').includes(k);\n  return re;\n};\n\nconst Word = props => {\n  if (!props.word) return null;\n  const juntaChaves = props.validKeys.join('');\n  const matched = props.word.slice(0, juntaChaves.length);\n  const remainder = props.word.slice(juntaChaves.length);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"matched\",\n      children: matched\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"remainder\",\n      children: remainder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Word;\n\nconst App = () => {\n  _s();\n\n  const [typedKeys, setTypedKeys] = useState([]);\n  const [validKeys, setValidKeys] = useState([]);\n  const [competedWords, setCompletedWors] = useState([]);\n  const [word, setWord] = useState('');\n\n  const handleKeyDown = e => {\n    e.preventDefault();\n    const {\n      key\n    } = e;\n    setTypedKeys(prev => {\n      return [...prev, key].slice(-1 * max_typed);\n    });\n\n    if (valido(key, word)) {\n      setValidKeys(prev => {\n        const tamValido = prev.length <= word.length;\n        const proximoCarac = tamValido && word[prev.length] === key;\n        return proximoCarac ? [...prev, key] : prev;\n      });\n    }\n  };\n\n  useEffect(() => {\n    setWord(getPalavra());\n  }, []);\n  useEffect(() => {\n    const palavra = validKeys.join('').toLowerCase();\n\n    if (palavra === word) {\n      let novaPalavra = null;\n\n      do {\n        novaPalavra = getWord();\n      } while (competedWords.includes(novaPalavra));\n\n      setWord(novaPalavra);\n    }\n  }, [word, validKeys, competedWords]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    tabIndex: \"0\",\n    onKeyDown: handleKeyDown,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"valid-keys\",\n      children: /*#__PURE__*/_jsxDEV(Word, {\n        word: word,\n        validKeys: validKeys\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"typed-keys\",\n      children: typedKeys ? typedKeys.join(' ') : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"completed-words-keys\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"cidade\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"carro\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"professor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"9nGxHFd9UV/LCr5ZU2vzJCduKPo=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Word\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["D:/_Arquivos/Documents/mattheus/TypingText/src/App.js"],"names":["React","useEffect","useState","lista_palavras","max_typed","getPalavra","index","Math","floor","random","length","palavra","toLowerCase","valido","k","w","re","split","includes","Word","props","word","juntaChaves","validKeys","join","matched","slice","remainder","App","typedKeys","setTypedKeys","setValidKeys","competedWords","setCompletedWors","setWord","handleKeyDown","e","preventDefault","key","prev","tamValido","proximoCarac","novaPalavra","getWord"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport lista_palavras from './resources/words.json'\r\nconst max_typed=30\r\nconst getPalavra=()=>{\r\n    const index=Math.floor(Math.random()*lista_palavras.length)\r\n    const palavra =lista_palavras[index]\r\n    return palavra.toLowerCase();\r\n}\r\nconst valido=(k,w)=>{\r\n    if(!w) return false\r\n    const re=w.split('').includes(k)\r\n    return re\r\n}\r\nconst Word=(props)=>{\r\n    if(!props.word)return null\r\n    const juntaChaves=props.validKeys.join('');\r\n    const matched=props.word.slice(0,juntaChaves.length)\r\n    const remainder=props.word.slice(juntaChaves.length)\r\n    return(\r\n        <>\r\n            <span className=\"matched\">{matched}</span>\r\n           <span className=\"remainder\">{remainder}</span>\r\n        </>\r\n    )\r\n}\r\nconst App=()=>{\r\n    const [typedKeys,setTypedKeys]=useState([])\r\n    const [validKeys,setValidKeys]=useState([])\r\n    const [competedWords,setCompletedWors]=useState([])\r\n    const [word,setWord]=useState('')\r\n    const handleKeyDown=(e)=>{\r\n        e.preventDefault();\r\n        const {key}=e\r\n        setTypedKeys((prev)=>{\r\n            return [...prev,key].slice(-1*max_typed)\r\n        })\r\n        if(valido(key,word)){\r\n            setValidKeys((prev)=>{\r\n                const tamValido=prev.length<=word.length\r\n                const proximoCarac=tamValido && word[prev.length]===key\r\n                return proximoCarac?[...prev,key]:prev\r\n            })\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        setWord(getPalavra())\r\n    },[])\r\n    useEffect(()=>{\r\n        const palavra=validKeys.join('').toLowerCase()\r\n        if(palavra === word)\r\n        {\r\n            let novaPalavra=null;\r\n            do{\r\n                novaPalavra=getWord()\r\n            }while(competedWords.includes(novaPalavra))\r\n\r\n            setWord(novaPalavra)\r\n        }\r\n    },[word,validKeys,competedWords])\r\n    return (\r\n    \r\n    <div className=\"container\" tabIndex =\"0\" onKeyDown={handleKeyDown}>\r\n       <div className=\"valid-keys\">\r\n        <Word  word={word} validKeys={validKeys}/>\r\n       </div>\r\n       <div className=\"typed-keys\">{typedKeys?typedKeys.join(' '):null}</div> \r\n       <div className=\"completed-words-keys\">\r\n           <ol>\r\n               <li>cidade</li>\r\n               <li>carro</li>\r\n               <li>professor</li>\r\n               \r\n           </ol>\r\n       </div>\r\n    </div>\r\n    )\r\n}\r\nexport default App;"]},"metadata":{},"sourceType":"module"}